<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qfit.mvc.model.dao.FeedbackDao">
	
	<!-- 피드백 존재 여부 확인 -->
	<select id="feedbackExists" resultType="int" parameterType="int">
		SELECT COUNT(*)
		FROM feedback
		WHERE quest_id=#{questId}
	</select>
	
	<!-- 피드백 불러오기 -->
	<select id="getFeedbackByQuestId" resultType="Feedback">
		SELECT * 
		FROM feedback
		WHERE quest_id=#{questId}
	</select>
	
	<!-- 피드백 삽입 -->
	<insert id="insertFeedback" parameterType="Feedback">
		INSERT INTO feedback (quest_id, trainer_id, content)
		VALUES (#{questId}, ${trainerId}, #{content})
	</insert>
	
	<!-- 피드백 삭제 -->
	<delete id="deleteFeedback" parameterType="int">
		DELETE FROM feedback 
		WHERE quest_id=#{questId}
	</delete>
	
	<!-- 피드백 수정 -->
	<update id="updateFeedback" parameterType="map">
		UPDATE feedback
		SET content=#{content}
		WHERE quest_id=#{questId}
	</update>
	
	<!-- 피드백이 없는 퀘스트 목록을 조회 -->
    <select id="getFeedbackPendingQuests" resultType="map">
        SELECT q.quest_id AS quest_id,
	           q.trainee_id AS trainee_id,
	           u.user_name AS trainee_name,
        	   u.birth_date AS trainee_birth_date,
        	   DATE(q.start_at) AS quest_start_at 
        FROM quest q
        LEFT JOIN feedback f ON q.quest_id = f.quest_id
        LEFT JOIN trainee t ON q.trainee_id = t.id
    	LEFT JOIN user u ON t.id = u.id
        WHERE f.feedback_id IS NULL
          AND q.trainer_id = #{trainerId}
    </select>
	
</mapper>